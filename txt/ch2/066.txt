
The device files are something of a zoo, each creature a little different, but
the basic ideas of the file system apply to each. Here is a significantly
shortened list of our /dev:

        $ ls -l /dev
        crw--w--w- 1 root  0,  0 Sep 27 23:09 console
        crw-r--r-- 1 root  3,  1 Sep 27 14:37 fcmem
        crw-r--r-- 1 root  3,  0 May  6  1981 mem
        brw-rw-rw- 1 root  1, 64 Aug 24 17:41 mt0
        crw-rw-rw- 1 root  3,  2 Sep 28 02:03 null
        crw-rw-rw- 1 root  4, 64 Sep  9 15:42 rmt0
        brw-r----- 1 root  2,  0 Sep  8 08:07 rp00
        brw-r----- 1 root  2,  1 Sep 27 23:09 rp01
        crw-r----- 1 root 13,  0 Apr 12  1983 rrp00
        crw-r----- 1 root 13,  1 Jul 28 15:18 rrp01
        crw-rw-rw- 1 root  2,  0 Jul  5 08:04 tty
        crw--w--w- 1 root  1,  0 Sep 28 02:38 tty0
        crw--w--w- 1 root  1,  1 Sep 27 23:09 tty1
        crw--w--w- 1 root  1,  2 Sep 27 17:33 tty2
        crw--w--w- 1 root  1,  3 Sep 27 18:48 tty3
        $

The first thing to notice are that instead of a byte count there is a pair of
small integers, and that the first character of the mode is always a 'b' or a
'c'. This is how ls prints the information from an inode that specifies a device
rather than a regular file. The inode of a regular file contains a list of disc
blocks that store the file's contents. For a device file, the inode instead
contains the internal name for the device, which consists of its type ---
character (c) or block (b) --- and a pair of number, called the major and minor
device numbers. Discs and tapes are block devices; everything else ---
terminals, printers, phone lines, etc. --- is a character device. The major
number encodes the type the device, while the minor number distinguishes
different instances of the device. For example, /dev/tty0 and /dev/tty1 are two
ports on the same terminal controller, so they have the same major device number
but different minor numbers.

Disc files are usually named after the particular hardware variant they
represent. /dev/rp00 and /dev/rp01 are named after the DEC RP06 disc drive
attached to the system. There is just one drive, divided logically into two file
systems. If there were a second drive, its associated files would be named
/dev/rp10 and /dev/rp11. The first digit specifies the physical drive, and
second which portion of the drive.

You might wonder why there are several disc device files, instead of just one.
For historical reasons and for ease of maintenance, the file system is divided
into smaller subsystems. The files in a subsystem are accessible through a
directory in the main system. The program /etc/mount reports the correspondence
between device files and directories:
